<?php
/**
 * WordPress Configuration Optimizations
 * 
 * Additional configurations for performance and security optimization.
 * Include this file in your wp-config.php:
 * require_once(__DIR__ . '/wp-config-optimizations.php');
 */

// ====================================
// CACHE AND PERFORMANCE SETTINGS
// ====================================

// Enable object caching (Redis)
define('WP_CACHE', true);

// Redis configuration
define('WP_REDIS_HOST', 'redis');
define('WP_REDIS_PORT', 6379);
define('WP_REDIS_TIMEOUT', 1);
define('WP_REDIS_READ_TIMEOUT', 1);
define('WP_REDIS_DATABASE', 0);

// Disable WP-Cron (use real system cron)
define('DISABLE_WP_CRON', true);

// Database query optimizations
define('WP_USE_EXT_MYSQL', false); // Use MySQLi
define('DB_COLLATE', 'utf8mb4_unicode_ci'); // Better collation

// Cache and performance (Redis handles its own cache keys)

// ====================================
// SECURITY SETTINGS
// ====================================

// Disable file editing via admin (critical security)
define('DISALLOW_FILE_EDIT', true);
define('DISALLOW_FILE_MODS', true);

// Force SSL in admin (if using HTTPS)
define('FORCE_SSL_ADMIN', true);

// Enhanced security settings
define('WP_POST_REVISIONS', 10); // Keep reasonable amount of revisions
define('AUTOSAVE_INTERVAL', 120); // 2 minutes - good balance UX/performance

// Security (keep flexible for plugins/themes)
define('WP_CRON_LOCK_TIMEOUT', 60); // Prevent cron lock issues

// Security keys are automatically generated by WordPress during installation
// No manual configuration needed - WordPress handles this automatically

// ====================================
// MEMORY AND PERFORMANCE SETTINGS
// ====================================

// Memory limits (balanced for performance)
define('WP_MEMORY_LIMIT', '512M');
define('WP_MAX_MEMORY_LIMIT', '512M'); // Keep consistent

// Database optimizations
define('WP_ALLOW_REPAIR', false); // Only enable when needed
define('AUTOMATIC_UPDATER_DISABLED', false); // Allow auto-updates

// Note: CSS/JS compression handled by cache plugins (WP Rocket, etc.)
// Avoid conflicts by letting cache plugins handle compression

// ====================================
// UPLOAD AND MEDIA SETTINGS
// ====================================

// Upload limits (reasonable for most use cases)
// Note: Handled by PHP ini settings - keeping WordPress defaults
// Individual file type limits handled by custom function below

// Filesystem method (WordPress default for Docker containers)
define('FS_METHOD', 'direct'); // Safe for containerized environments

// Media settings - no trash, delete means delete
define('MEDIA_TRASH', false); // Direct deletion - no media trash
define('EMPTY_TRASH_DAYS', 7); // Faster cleanup for posts/pages

// Image quality optimization (WordPress standard)
add_filter('jpeg_quality', function() { return 85; });
add_filter('wp_editor_set_quality', function() { return 85; });

// ====================================
// DEBUG SETTINGS
// ====================================

// For development (disable in production)
define('WP_DEBUG', false);
define('WP_DEBUG_LOG', false);
define('WP_DEBUG_DISPLAY', false);
define('SCRIPT_DEBUG', false);

// ====================================
// AUTO-UPDATE SETTINGS
// ====================================

// Auto-updates for minor versions
define('WP_AUTO_UPDATE_CORE', 'minor');

// ====================================
// CACHE-SPECIFIC OPTIMIZATIONS
// ====================================

// Varnish configuration
if (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') {
    $_SERVER['HTTPS'] = 'on';
}

// Reverse proxy configuration
if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) {
    $ips = explode(',', $_SERVER['HTTP_X_FORWARDED_FOR']);
    $_SERVER['REMOTE_ADDR'] = trim($ips[0]);
}

// ====================================
// MULTISITE SETTINGS (if needed)
// ====================================

// Uncomment if using multisite
// define('WP_ALLOW_MULTISITE', true);
// define('MULTISITE', true);
// define('SUBDOMAIN_INSTALL', false);
// define('DOMAIN_CURRENT_SITE', 'example.com');
// define('PATH_CURRENT_SITE', '/');
// define('SITE_ID_CURRENT_SITE', 1);
// define('BLOG_ID_CURRENT_SITE', 1);

// ====================================
// UPLOAD SIZE CONTROL BY FILE TYPE
// ====================================

// Smart upload limits - based on WordPress best practices
if (!function_exists('wp_turbo_upload_limits')) {
    function wp_turbo_upload_limits($file) {
        $file_type = $file['type'];
        $file_size = $file['size'];
        
        // Images and documents - 1MB limit (unified)
        $media_types = array(
            // Images
            'image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp', 'image/svg+xml',
            // Documents  
            'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
        );
        
        if (in_array($file_type, $media_types)) {
            $max_size = 1 * 1024 * 1024; // 1MB
            if ($file_size > $max_size) {
                $file['error'] = 'Files must be smaller than 1MB. Please compress your file before uploading. <a href="http://joaopedrofrech.com/compressor-suggestions" target="_blank">See compression tools →</a>';
            }
        }
        
        // Video files - Block with helpful message
        $video_types = array('video/mp4', 'video/avi', 'video/mov', 'video/wmv', 'video/flv', 'video/webm');
        if (in_array($file_type, $video_types)) {
            $file['error'] = 'Video uploads are not allowed. Please upload your videos to YouTube, Vimeo or similar platforms and embed them in your content. <a href="https://youtube.com" target="_blank">Upload to YouTube →</a>';
        }
        
        return $file;
    }
    add_filter('wp_handle_upload_prefilter', 'wp_turbo_upload_limits');
}

// ====================================
// OPTIMIZATION HOOKS
// ====================================

// Remove unnecessary WordPress features for better performance
// Based on official WordPress performance recommendations
if (!function_exists('wp_turbo_clean_head')) {
    function wp_turbo_clean_head() {
        // Security: Remove WordPress version (prevents version-based attacks)
        remove_action('wp_head', 'wp_generator');
        
        // Performance: Remove rarely used meta links
        remove_action('wp_head', 'wlwmanifest_link'); // Windows Live Writer
        remove_action('wp_head', 'rsd_link'); // Really Simple Discovery
        
        // Performance: Disable emoji support (saves ~15KB per page)
        remove_action('wp_head', 'print_emoji_detection_script', 7);
        remove_action('wp_print_styles', 'print_emoji_styles');
        remove_action('admin_print_scripts', 'print_emoji_detection_script');
        remove_action('admin_print_styles', 'print_emoji_styles');
        remove_filter('the_content_feed', 'wp_staticize_emoji');
        remove_filter('comment_text_rss', 'wp_staticize_emoji');
        remove_filter('wp_mail', 'wp_staticize_emoji_for_email');
        
        // Performance: Remove oEmbed discovery (unless you need auto-embeds)
        remove_action('wp_head', 'wp_oembed_add_discovery_links');
        remove_action('wp_head', 'wp_oembed_add_host_js');
    }
    add_action('wp', 'wp_turbo_clean_head');
}

?>
