# Docker Compose para desenvolvimento local - wp-docker-turbostack

services:
  # MariaDB - Banco de dados
  mariadb:
    image: mariadb:11.8-noble
    container_name: ${PROJECT_NAME:-wp-site}_mariadb_local
    restart: unless-stopped
    ports:
      - "3306:3306"  # Exposta para acesso local
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-dev_root_123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-wp-site-local}
      MYSQL_USER: ${MYSQL_USER:-wp-user-local}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-dev_password_123}
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - wp_network
    command: >
      --innodb-buffer-pool-size=32M
      --innodb-log-file-size=16M
      --innodb-log-buffer-size=2M
      --max-connections=50
      --thread-cache-size=4
      --table-open-cache=64
      --table-definition-cache=64
      --sort-buffer-size=128K
      --read-buffer-size=64K
      --read-rnd-buffer-size=64K
      --myisam-sort-buffer-size=8M
      --thread-stack=64K
      --max-allowed-packet=64M
      --wait-timeout=600
      --interactive-timeout=600
      --skip-name-resolve

  # Redis - Object Cache
  redis:
    image: redis:8.2.2-alpine
    container_name: ${PROJECT_NAME:-wp-site}_redis_local
    restart: unless-stopped
    ports:
      - "6379:6379"  # Exposta para acesso local
    command: >
      redis-server
      --maxmemory 32mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - wp_network

  # WordPress com PHP-FPM
  wordpress:
    image: wordpress:fpm-alpine
    container_name: ${PROJECT_NAME:-wp-site}_wordpress_local
    restart: unless-stopped
    depends_on:
      - mariadb
      - redis
    # extra_hosts configurado automaticamente via mu-plugin
    environment:
      WORDPRESS_DB_HOST: mariadb:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE:-wp-site-local}
      WORDPRESS_DB_USER: ${MYSQL_USER:-wp-user-local}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD:-dev_password_123}
      WORDPRESS_CONFIG_EXTRA: |
        if (!defined('WP_DEBUG')) define('WP_DEBUG', true);
        if (!defined('WP_DEBUG_LOG')) define('WP_DEBUG_LOG', true);
        if (!defined('WP_DEBUG_DISPLAY')) define('WP_DEBUG_DISPLAY', false);
        if (!defined('WP_CACHE')) define('WP_CACHE', true);
        if (!defined('DISABLE_WP_CRON')) define('DISABLE_WP_CRON', true);
        if (!defined('WP_REDIS_HOST')) define('WP_REDIS_HOST', 'redis');
        if (!defined('WP_REDIS_PORT')) define('WP_REDIS_PORT', 6379);
        if (!defined('WP_REDIS_TIMEOUT')) define('WP_REDIS_TIMEOUT', 1);
        if (!defined('WP_REDIS_READ_TIMEOUT')) define('WP_REDIS_READ_TIMEOUT', 1);
        if (!defined('WP_REDIS_DATABASE')) define('WP_REDIS_DATABASE', 0);
        if (!defined('FS_METHOD')) define('FS_METHOD', 'direct');
        if (!defined('WP_HTTP_BLOCK_EXTERNAL')) define('WP_HTTP_BLOCK_EXTERNAL', false);
        if (!defined('WP_ACCESSIBLE_HOSTS')) define('WP_ACCESSIBLE_HOSTS', 'nginx,localhost,127.0.0.1');
    volumes:
      - wordpress_data:/var/www/html
      - ./wordpress/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./wordpress/php-fpm.conf:/usr/local/etc/php-fpm.d/zzz-custom.conf
      - ./wordpress/mu-plugins:/var/www/html/wp-content/mu-plugins:ro
    networks:
      - wp_network
    labels:
      - "wp.cron.job=true"
      - "wp.project=${PROJECT_NAME:-wp-site}"

  # Nginx - Servidor Web com Cache
  nginx:
    image: nginx:1.28-alpine
    container_name: ${PROJECT_NAME:-wp-site}_nginx_local
    restart: unless-stopped
    depends_on:
      - wordpress
    ports:
      - "80:80"     # Acesso principal - Nginx agora é o frontend
      - "8080:80"   # Porta alternativa para compatibilidade
    volumes:
      - wordpress_data:/var/www/html:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/rocket-nginx:/etc/nginx/rocket-nginx:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - wp_network

  # Adminer - Gerenciamento de Banco
  adminer:
    image: adminer:latest
    container_name: ${PROJECT_NAME:-wp-site}_adminer_local
    restart: unless-stopped
    depends_on:
      - mariadb
    ports:
      - "8081:8080"  # Acesso local ao Adminer
    environment:
      ADMINER_DEFAULT_SERVER: mariadb
      ADMINER_DESIGN: pepa-linha-dark
    networks:
      - wp_network

  # File Browser - Nativo (gera senha automática)
  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: ${PROJECT_NAME:-wp-site}_filebrowser_local
    restart: unless-stopped
    ports:
      - "8082:80"
    volumes:
      - wordpress_data:/srv
      - ./filebrowser.json:/.filebrowser.json
      - filebrowser_data:/database
    networks:
      - wp_network

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local
  wordpress_data:
    driver: local
  filebrowser_data:
    driver: local
  nginx_cache:
    driver: local

networks:
  wp_network:
    driver: bridge
