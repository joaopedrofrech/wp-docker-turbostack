# Docker Compose para desenvolvimento local
# Use: docker-compose -f docker-compose.local.yml up -d

services:
  # MariaDB - Banco de dados
  mariadb:
    image: mariadb:11.8
    container_name: ${PROJECT_NAME:-wp-site}_mariadb_local
    restart: unless-stopped
    ports:
      - "3306:3306"  # Exposta para acesso local
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-wordpress}
      MYSQL_USER: ${MYSQL_USER:-wordpress}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-wp_password}
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - wp_network

  # Redis - Object Cache
  redis:
    image: redis:8.2.2-alpine
    container_name: ${PROJECT_NAME:-wp-site}_redis_local
    restart: unless-stopped
    ports:
      - "6379:6379"  # Exposta para acesso local
    command: redis-server --maxmemory 64mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - wp_network

  # WordPress com PHP-FPM
  wordpress:
    image: wordpress:fpm-alpine
    container_name: ${PROJECT_NAME:-wp-site}_wordpress_local
    restart: unless-stopped
    depends_on:
      - mariadb
      - redis
    environment:
      WORDPRESS_DB_HOST: mariadb:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE:-wordpress}
      WORDPRESS_DB_USER: ${MYSQL_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD:-wp_password}
      WORDPRESS_DEBUG: 1
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG', true);
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', false);
        define('WP_CACHE', true);
        define('DISABLE_WP_CRON', true);
        define('WP_REDIS_HOST', 'redis');
        define('WP_REDIS_PORT', 6379);
        define('WP_REDIS_TIMEOUT', 1);
        define('WP_REDIS_READ_TIMEOUT', 1);
        define('WP_REDIS_DATABASE', 0);
        define('FS_METHOD', 'direct');
        ini_set('memory_limit', '512M');
        ini_set('upload_max_filesize', '100M');
        ini_set('post_max_size', '100M');
        ini_set('max_execution_time', 300);
    volumes:
      - wordpress_data:/var/www/html
      - ./wordpress/php.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - wp_network
    labels:
      - "wp.cron.job=true"
      - "wp.project=${PROJECT_NAME:-wp-site}"

  # Nginx - Servidor Web
  nginx:
    image: nginx:1.28-alpine
    container_name: ${PROJECT_NAME:-wp-site}_nginx_local
    restart: unless-stopped
    depends_on:
      - wordpress
    ports:
      - "8080:80"  # Acesso direto ao Nginx
    volumes:
      - wordpress_data:/var/www/html:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - wp_network

  # Varnish - Cache de Página
  varnish:
    image: varnish:latest
    container_name: ${PROJECT_NAME:-wp-site}_varnish_local
    restart: unless-stopped
    depends_on:
      - nginx
    ports:
      - "80:80"     # Acesso principal via Varnish
      - "6082:6082" # Interface de administração do Varnish
    volumes:
      - ./varnish/default.vcl:/etc/varnish/default.vcl
    command: >
      varnishd -F 
      -f /etc/varnish/default.vcl 
      -s malloc,128m 
      -a :80
      -T :6082
    networks:
      - wp_network

  # Adminer - Gerenciamento de Banco
  adminer:
    image: adminer:latest
    container_name: ${PROJECT_NAME:-wp-site}_adminer_local
    restart: unless-stopped
    depends_on:
      - mariadb
    ports:
      - "8081:8080"  # Acesso local ao Adminer
    environment:
      ADMINER_DEFAULT_SERVER: mariadb
      ADMINER_DESIGN: pepa-linha-dark
    networks:
      - wp_network

  # File Browser - Nativo (gera senha automática)
  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: ${PROJECT_NAME:-wp-site}_filebrowser_local
    restart: unless-stopped
    ports:
      - "8082:80"
    volumes:
      - wordpress_data:/srv
      - ./filebrowser.json:/.filebrowser.json
      - filebrowser_data:/database
    networks:
      - wp_network

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local
  wordpress_data:
    driver: local
  filebrowser_data:
    driver: local

networks:
  wp_network:
    driver: bridge
